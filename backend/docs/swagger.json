{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SmartHoover United",
    "description": "API for Managing SmartHoover's salesmen bonus calculation and their social performance",
    "contact": {
      "name": "Ukraine Group",
      "url": "https://github.com/ilya-yedomakha/UkraineGroup_Assignment3.git"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "User-related requests"
    },
    {
      "name": "Salesmen",
      "description": "Operations with salesmen"
    },
    {
      "name": "Social Performance",
      "description": "Operations with salesmen' social performance"
    },
    {
      "name": "Sales Performance",
      "description": "Operations with salesmen' sales performance"
    },
    {
      "name": "Reports",
      "description": "Operations with reports on salesmen' bonus salary"
    },
    {
      "name": "Rejection",
      "description": "Operations with rejection message on salesmen' bonus salary"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/salesman/": {
      "get": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Get All salesmen",
        "description": "Get all salesmen",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/salesman/import-from-orangeHRM": {
      "get": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Import senior salesman from OrangeHRM",
        "description": "Import senior salesman from OrangeHRM",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/salesman/{code}": {
      "get": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Get salesman by code",
        "description": "Get salesman by code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/salesman/calculate-bonuses": {
      "post": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Calculate all bonuses",
        "description": "Calculate all bonuses",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/salesman/send-bonuses-orangeHRM": {
      "post": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Send all bonuses to OrangeHRM",
        "description": "Send all bonuses to OrangeHRM",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/salesman/{code}/social_performance_record": {
      "post": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Create social performance record",
        "description": "Create social performance record",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Social Performance",
            "in": "body",
            "description": "Create social performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/socialPerformanceRecordSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/salesman/count/total": {
      "get": {
        "tags": [
          "Salesmen"
        ],
        "summary": "Get All salesmen",
        "description": "Get all salesmen",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/social_performance_record/": {
      "get": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Get all social performance records",
        "description": "Get all social performance records",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/social_performance_record/{id}": {
      "get": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Get social performance record by id",
        "description": "Get social performance record by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Update social performance record",
        "description": "Update social performance record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Social Performance",
            "in": "body",
            "description": "Update social performance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/socialPerformanceRecordSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Delete social performance record",
        "description": "Delete social performance record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/social_performance_record/salesman/{code}": {
      "get": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Get social performance record by salesman code",
        "description": "Get social performance record by salesman code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/social_performance_record/salesman/{salesmanCode}": {
      "delete": {
        "tags": [
          "Social Performance"
        ],
        "summary": "Delete social performance record by salesman code",
        "description": "Delete social performance record by salesman code",
        "parameters": [
          {
            "name": "salesmanCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sale_performance_record/import-from-openCRX": {
      "get": {
        "tags": [
          "Sales Performance"
        ],
        "summary": "Import sale performance form OpenCRX",
        "description": "Import sale performance form OpenCRX",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sale_performance_record/": {
      "get": {
        "tags": [
          "Sales Performance"
        ],
        "summary": "get all sales order",
        "description": "get all sales order",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sale_performance_record/count/year/current": {
      "get": {
        "tags": [
          "Sales Performance"
        ],
        "summary": "get all sales order for current year",
        "description": "get all sales order for current year",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sale_performance_record/salesman/{code}": {
      "get": {
        "tags": [
          "Sales Performance"
        ],
        "summary": "get all sales order for specific salesman",
        "description": "get all sales order for specific salesman",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete all reports",
        "description": "Delete all reports",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/year/{year}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/year/current/top10": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/salesman/{code}/year/current": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/salesman/{code}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update Report",
        "description": "Update Report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Report",
            "in": "body",
            "description": "Update Report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reportSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete report by Id",
        "description": "Delete report by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/hrm/stored/{id}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update Old Report",
        "description": "Update Old Report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/recalculate/{id}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Recalculate report",
        "description": "Recalculate report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/submit/confirmationArrayReverse": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Reverse array",
        "description": "Reverse array",
        "parameters": [
          {
            "name": "Report",
            "in": "body",
            "description": "Reverse array",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reverseArray"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/reverseConfirm/{id}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Confirm single report",
        "description": "Confirm single report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/salesman-confirm/{id}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Confirm single report by salesman",
        "description": "Confirm single report by salesman",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/salesman-reject/{id}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Reject single report by salesman",
        "description": "Reject single report by salesman",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/total": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/year/current": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/signed/CEO": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/signed/HR": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/signed/CEO/year/current": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/count/signed/HR/year/current": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/report/confirm/{id}/remark": {
      "post": {
        "tags": [
          "Reports"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/rejection/report/{reportId}": {
      "post": {
        "tags": [
          "Rejection"
        ],
        "summary": "Create rejection message",
        "description": "Create rejection message",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Rejection message",
            "in": "body",
            "description": "Create rejection message",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/rejection/{id}": {
      "get": {
        "tags": [
          "Rejection"
        ],
        "summary": "Get rejection message by id",
        "description": "Get rejection message by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rejection"
        ],
        "summary": "Delete rejection message",
        "description": "Delete rejection message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/rejection/salesman/{code}": {
      "get": {
        "tags": [
          "Rejection"
        ],
        "summary": "Get rejection messages by salesman code",
        "description": "Get rejection messages by salesman code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rejection"
        ],
        "summary": "Delete rejection message by salesman code",
        "description": "Delete rejection message by salesman code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/rejection/year/{year}": {
      "get": {
        "tags": [
          "Rejection"
        ],
        "summary": "Get rejection messages by year",
        "description": "Get rejection messages by year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/rejection/year/current/count": {
      "get": {
        "tags": [
          "Rejection"
        ],
        "summary": "Get count of rejection messages by year",
        "description": "Get count of rejection messages by year",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/rejection/report/{reportId}/": {
      "delete": {
        "tags": [
          "Rejection"
        ],
        "summary": "Delete rejection message by report id",
        "description": "Delete rejection message by report id",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log in",
        "description": "Log in",
        "parameters": [
          {
            "name": "User credentials",
            "in": "body",
            "description": "Login with your credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out",
        "description": "Log out",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Check if logged in",
        "description": "Check if logged in",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user data",
        "description": "Get current user data",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user data",
        "description": "Get current user data",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create user",
        "description": "Create user",
        "parameters": [
          {
            "name": "Users",
            "in": "body",
            "description": "Create user account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreationSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{code}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get single user by code",
        "description": "Get single user by code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update user",
        "description": "Update user",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Users",
            "in": "body",
            "description": "Update user account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreationSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/total/count": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user data",
        "description": "Get current user data",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/salesmen/codes": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get list of free salesman codes",
        "description": "Get list of free salesman codes",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/password/change/": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update user password",
        "description": "Update user password",
        "parameters": [
          {
            "name": "Users",
            "in": "body",
            "description": "Update user account password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userPasswordChangeSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "apiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "errorResponse.400": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "The request was malformed or invalid. Please check the request parameters."
        }
      }
    },
    "errorResponse.401": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Authentication failed or user lacks proper authorization."
        }
      }
    },
    "errorResponse.403": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "You do not have permission to access this resource."
        }
      }
    },
    "errorResponse.404": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "The requested resource could not be found on the server."
        }
      }
    },
    "errorResponse.500": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "An unexpected error occurred on the server. Please try again later."
        }
      }
    },
    "userSchema": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "admin"
        },
        "password": {
          "type": "string",
          "example": "5$c3inw%"
        }
      }
    },
    "userCreationSchema": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "username"
        },
        "firstname": {
          "type": "string",
          "example": "firstname"
        },
        "lastname": {
          "type": "string",
          "example": "lastname"
        },
        "email": {
          "type": "string",
          "example": "email"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "role": {
          "type": "number",
          "example": 2
        },
        "code": {
          "type": "number",
          "example": 12345
        }
      }
    },
    "socialPerformanceRecordSchema": {
      "type": "object",
      "properties": {
        "goal_description": {
          "type": "string",
          "example": "Attitude toward Client"
        },
        "target_value": {
          "type": "number",
          "example": 5
        },
        "actual_value": {
          "type": "number",
          "example": 1
        },
        "year": {
          "type": "number",
          "example": 2021
        }
      }
    },
    "reportSchema": {
      "type": "object",
      "properties": {
        "ordersBonuses": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "socialBonuses": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "remarks": {
          "type": "string",
          "example": "remark"
        }
      }
    },
    "rejectionSchema": {
      "type": "object",
      "properties": {
        "salesman_code": {
          "type": "number",
          "example": 90731
        },
        "report_id": {
          "type": "string",
          "example": "678516a752714ecb1941ce3e"
        },
        "year": {
          "type": "number",
          "example": 2025
        },
        "message": {
          "type": "string",
          "example": "You made a mistake in the calculations"
        }
      }
    },
    "reverseArray": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "example": [
            "678010157d630c79c9312c7d",
            "678010167d630c79c9312c88"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "confirmationPairCEO": {
      "type": "object",
      "properties": {
        "pairs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "678010167d630c79c9312c88"
              },
              "confirm": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      }
    },
    "remarkSendEmailSchema": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "testemail@gmail.com"
        },
        "message": {
          "type": "string",
          "example": "You are really great worker"
        }
      }
    },
    "userPasswordChangeSchema": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "oldPassword"
        },
        "newPassword": {
          "type": "string",
          "example": "newPassword"
        }
      }
    }
  }
}